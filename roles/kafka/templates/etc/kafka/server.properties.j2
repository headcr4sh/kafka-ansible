process.roles={{ kafka_server_process_roles | join(',') }}
node.id={{ kafka_server_node_id }}

broker.rack={{ kafka_server_broker_rack }}
controller.quorum.voters=1@localhost:{{ kafka_ports['control_plane'] }}
listeners=PLAINTEXT://:{{ kafka_ports['clients'] }},CONTROLLER://:{{ kafka_ports['control_plane'] }}
inter.broker.listener.name=PLAINTEXT

advertised.listeners=PLAINTEXT://localhost:{{ kafka_ports['clients'] }}

controller.listener.names=CONTROLLER

listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL

num.network.threads=3

num.io.threads=8

socket.send.buffer.bytes=102400

socket.receive.buffer.bytes=102400

socket.request.max.bytes=104857600

log.dirs={{ kafka_server_log_dirs | join(',') }}


num.partitions={{ kafka_server_num_partitions }}

num.recovery.threads.per.data.dir={{ kafka_server_num_recovery_threads_per_data_dir }}

offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

ssl.enabled.protocols={{ kafka_server_ssl_enabled_protocols | join(',') }}
#log.flush.interval.messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
#log.flush.interval.ms=1000

############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion due to age
log.retention.hours={{ kafka_server_log_retention_hours }}

# A size-based retention policy for logs. Segments are pruned from the log unless the remaining
# segments drop below log.retention.bytes. Functions independently of log.retention.hours.
#log.retention.bytes=1073741824

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
log.segment.bytes=1073741824

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
log.retention.check.interval.ms=300000
